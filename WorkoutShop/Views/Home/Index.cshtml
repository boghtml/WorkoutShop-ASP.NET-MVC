@model IEnumerable<WorkoutShop.Models.Product>
@{
    ViewData["Title"] = "WorkoutShop - Home";
}
<link rel="stylesheet" href="~/css/custom.css" />

<div class="container-fluid mt-4">
    <div class="row">
        <!-- Sidebar for filters -->
        <div class="col-md-3">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Filters</h5>
                </div>
                <div class="card-body">
                    <form asp-action="Index" method="get">
                        <div class="mb-3">
                            <label for="category" class="form-label">Category</label>
                            <select name="category" id="category" class="form-select">
                                <option value="">All Categories</option>
                                @foreach (var cat in Model.Select(p => p.Category).Distinct())
                                {
                                    <option value="@cat.Name">@cat.Name</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="sortOrder" class="form-label">Sort By</label>
                            <select name="sortOrder" id="sortOrder" class="form-select">
                                <option value="price_asc">Price: Low to High</option>
                                <option value="price_desc">Price: High to Low</option>
                                <option value="popularity">Popularity</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="priceRange" class="form-label">Price Range</label>
                            <div class="row">
                                <div class="col">
                                    <input type="number" name="minPrice" id="minPrice" class="form-control" placeholder="Min" step="0.01" />
                                </div>
                                <div class="col">
                                    <input type="number" name="maxPrice" id="maxPrice" class="form-control" placeholder="Max" step="0.01" />
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="searchTerm" class="form-label">Search</label>
                            <input type="text" name="searchTerm" id="searchTerm" class="form-control" placeholder="Search products..." />
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Apply Filters</button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Main content area -->
        <div class="col-md-9">
            <h1 class="mb-4">Workout Equipment</h1>

            @if (Model != null && Model.Any())
            {
                <div class="row row-cols-1 row-cols-md-3 g-4">
                    @foreach (var product in Model)
                    {
                        <div class="col">
                            <div class="card h-100 shadow-sm product-card">
                                <div class="position-relative">
                                    @if (product.ProductImages != null && product.ProductImages.Any())
                                    {
                                        var primaryImageUrl = product.ProductImages.FirstOrDefault(i => i.IsPrimary)?.ImageUrl ?? product.ProductImages.First().ImageUrl;
                                        <a asp-action="Details" asp-route-id="@product.ProductId">
                                            <img src="@primaryImageUrl" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: cover;">
                                        </a>
                                    }
                                    else
                                    {
                                        <img src="~/images/no-image.png" class="card-img-top" alt="No Image" style="height: 200px; object-fit: cover;">
                                    }
                                    @if (product.StockQuantity <= 5 && product.StockQuantity > 0)
                                    {
                                        <span class="badge bg-warning position-absolute top-0 end-0 m-2">Limited Stock</span>
                                    }
                                    @if (product.StockQuantity == 0)
                                    {
                                        <span class="badge bg-danger position-absolute top-0 end-0 m-2">Sold Out</span>
                                    }
                                </div>
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@product.Name</h5>
                                    <p class="card-text flex-grow-1">
                                        @if (!string.IsNullOrEmpty(product.Description))
                                        {
                                            @(product.Description.Length > 100 ? product.Description.Substring(0, 97) + "..." : product.Description)
                                        }
                                        else
                                        {
                                            @:"No description available."
                                        }
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center mt-auto">
                                        <span class="h5 mb-0 text-primary">@product.Price.ToString("C")</span>
                                        @if (product.StockQuantity > 0)
                                        {
                                            <button class="btn btn-sm btn-outline-primary add-to-cart" data-product-id="@product.ProductId">
                                                <i class="fas fa-cart-plus"></i> Add to Cart
                                            </button>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Out of Stock</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-info text-center" role="alert">
                    <h4 class="alert-heading">No products available</h4>
                    <p>We're currently restocking our inventory. Please check back soon!</p>
                </div>
            }
        </div>
    </div>

    <br></br>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.add-to-cart').click(function () {
                var productId = $(this).data('product-id');
                // AJAX call to add the item to the cart
                $.post('@Url.Action("AddToCart", "Cart")', { productId: productId, quantity: 1 }, function (response) {
                    // Update cart UI
                    $('#cartItemCount').text(response.cartItemCount);
                    Swal.fire({
                        title: 'Success!',
                        text: 'Product added to cart',
                        icon: 'success',
                        confirmButtonText: 'Continue Shopping'
                    });
                }).fail(function () {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to add product to cart',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
            });

            // Price range slider
            $("#priceRange").slider({
                range: true,
                min: 0,
                max: 1000,
                values: [0, 1000],
                slide: function (event, ui) {
                    $("#minPrice").val(ui.values[0]);
                    $("#maxPrice").val(ui.values[1]);
                }
            });

            // Update slider when inputs change
            $("#minPrice, #maxPrice").on("input", function () {
                $("#priceRange").slider("values", [$("#minPrice").val(), $("#maxPrice").val()]);
            });
        });
    </script>
}